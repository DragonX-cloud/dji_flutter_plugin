def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "cloud.dragonx.plugin.flutter.dji_example"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

//        multiDexEnabled true
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//        debug {
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }

    packagingOptions {
        // Had to add "pickFirst" here to avoid a build error:
        //Execution failed for task ':app:mergeDebugJavaResource'.
        //> A failure occurred while executing com.android.build.gradle.internal.tasks.MergeJavaResWorkAction
        //        > 2 files found with path 'META-INF/rxjava.properties' from inputs:
        //- /Users/oren/.gradle/caches/transforms-3/25303cc1e13b2fa5d8e405bd55bb2138/transformed/jetified-dji-sdk-4.15.1/jars/classes.jar
        //- /Users/oren/.gradle/caches/transforms-3/25303cc1e13b2fa5d8e405bd55bb2138/transformed/jetified-dji-sdk-4.15.1/jars/libs/dji-rxjava-1.1.3.jar
        //Adding a packagingOptions block may help, please refer to
        //https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html for more information
        //pickFirst 'META-INF/rxjava.properties'
        exclude 'META-INF/rxjava.properties'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0'

//    implementation 'androidx.multidex:multidex:2.0.1'
}
