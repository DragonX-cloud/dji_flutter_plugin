def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty("flutter.sdk")
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
//    compileSdkVersion 32
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "cloud.dragonx.plugin.flutter.djiExample"
//        minSdkVersion 24
//        targetSdkVersion 32
        minSdkVersion 23
        targetSdkVersion 30

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true

        ndk {
            // On x86 devices that run Android API 23 or above, if the application is targeted with API 23 or
            // above, FFmpeg lib might lead to runtime crashes or warnings.
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            shrinkResources true
            minifyEnabled true
//            multiDexKeepFile file('multidex-keep-file.txt')
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
//        doNotStrip "*/*/libdjivideo.so"
//        doNotStrip "*/*/libSDKRelativeJNI.so"
//        doNotStrip "*/*/libFlyForbid.so"
//        doNotStrip "*/*/libduml_vision_bokeh.so"
//        doNotStrip "*/*/libyuv2.so"
//        doNotStrip "*/*/libGroudStation.so"
//        doNotStrip "*/*/libFRCorkscrew.so"
//        doNotStrip "*/*/libUpgradeVerify.so"
//        doNotStrip "*/*/libFR.so"
//        doNotStrip "*/*/libDJIFlySafeCore.so"
//        doNotStrip "*/*/libdjifs_jni.so"
//        doNotStrip "*/*/libsfjni.so"
//        doNotStrip "*/*/libDJICommonJNI.so"
//        doNotStrip "*/*/libDJICSDKCommon.so"
//        doNotStrip "*/*/libDJIUpgradeCore.so"
//        doNotStrip "*/*/libDJIUpgradeJNI.so"
//        doNotStrip "*/*/libDJIWaypointV2Core.so"
//        doNotStrip "*/*/libAMapSDK_MAP_v6_9_2.so"
//        doNotStrip "*/*/libDJIMOP.so"
//        doNotStrip "*/*/libDJISDKLOGJNI.so"
//
//        pickFirst "lib/*/libstlport_shared.so"
//        pickFirst "lib/*/libRoadLineRebuildAPI.so"
//        pickFirst "lib/*/libGNaviUtils.so"
//        pickFirst "lib/*/libGNaviMapex.so"
//        pickFirst "lib/*/libGNaviData.so"
//        pickFirst "lib/*/libGNaviMap.so"
//        pickFirst "lib/*/libGNaviSearch.so"
//        pickFirst "lib/*/libDJIFlySafeCore.so"
//        pickFirst "lib/*/libdjifs_jni.so"
//        pickFirst "lib/*/libsfjni.so"
//
//        exclude "META-INF/proguard/okhttp3.pro"
//        exclude "META-INF/rxjava.properties"
//        exclude "assets/location_map_gps_locked.png"
//        exclude "assets/location_map_gps_3d.png"

//        pickFirst "dji/thirdparty/okhttp3/internal/publicsuffix/publicsuffixes.gz"

        doNotStrip "*/*/libdjivideo.so"
        doNotStrip "*/*/libSDKRelativeJNI.so"
        doNotStrip "*/*/libFlyForbid.so"
        doNotStrip "*/*/libduml_vision_bokeh.so"
        doNotStrip "*/*/libyuv2.so"
        doNotStrip "*/*/libGroudStation.so"
        doNotStrip "*/*/libFRCorkscrew.so"
        doNotStrip "*/*/libUpgradeVerify.so"
        doNotStrip "*/*/libFR.so"
        doNotStrip "*/*/libDJIFlySafeCore.so"
        doNotStrip "*/*/libdjifs_jni.so"
        doNotStrip "*/*/libsfjni.so"
        doNotStrip "*/*/libDJICommonJNI.so"
        doNotStrip "*/*/libDJICSDKCommon.so"
        doNotStrip "*/*/libDJIUpgradeCore.so"
        doNotStrip "*/*/libDJIUpgradeJNI.so"
        doNotStrip "*/*/libDJIWaypointV2Core.so"
        doNotStrip "*/*/libAMapSDK_MAP_v6_9_2.so"
        doNotStrip "*/*/libDJIMOP.so"
        doNotStrip "*/*/libDJISDKLOGJNI.so"
        exclude 'META-INF/rxjava.properties'
        exclude 'assets/location_map_gps_locked.png'
        exclude 'assets/location_map_gps_3d.png'
    }
}

flutter {
    source "../.."
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation "androidx.multidex:multidex:2.0.1"
//
//    implementation "androidx.core:core-ktx:1.8.0"
//    implementation "androidx.appcompat:appcompat:1.4.2"
    implementation "com.google.android.material:material:1.2.0"
//    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'
//
//    androidTestImplementation "androidx.test.ext:junit:1.1.3"
//    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation('com.dji:dji-sdk:4.15.1', {
        /**
         * Uncomment the "library-anti-distortion" if your app does not need Anti Distortion for Mavic 2 Pro and Mavic 2 Zoom.
         * Uncomment the "fly-safe-database" if you need database for release, or we will download it when DJISDKManager.getInstance().registerApp
         * is called.
         * Both will greatly reducing the size of the APK.
         */
        exclude module: 'library-anti-distortion'
        //exclude module: 'fly-safe-database'
    })
    compileOnly 'com.dji:dji-sdk-provided:4.15.1'

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.core:core:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0-rc01"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-process:2.3.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    implementation 'com.google.guava:guava:29.0-android'
    implementation 'org.apache.commons:commons-math3:3.6.1'
}
